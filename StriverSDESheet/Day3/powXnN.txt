#include<bits/stdc++.h>

using namespace std;
double myPow(double x, int n) {
  double ans = 1.0;
  long long nn = n;
  if (nn < 0) nn = -1 * nn;
  while (nn) {
    if (nn % 2) {
      ans = ans * x;
      nn = nn - 1;
    } else {
      x = x * x;
      nn = nn / 2;
    }
  }
  if (n < 0) ans = (double)(1.0) / (double)(ans);
  return ans;
}

int main() {
  cout << myPow(2, 10) << endl;
}






class Solution:
    def myPow(self, x: float, n: int) -> float:
        if n<0 : 
            return 1/self.myPow(x, -1*n)
        if n==0 : 
            return 1
        if n==1 : 
            return x
        if n%2==0 : 
            res = self.myPow(x, n//2)
            return res*res
        return x*self.myPow(x, n-1)